// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ETL.Data.Sql
{
    public partial class Sql_Context : DbContext
    {
        public Sql_Context()
        {
        }

        public Sql_Context(DbContextOptions<Sql_Context> options)
            : base(options)
        {
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(@"Data Source=217.160.15.235;Initial Catalog=InterERPv3TestETL;User ID=sa;Password=Root.inter2020!;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False");
        }

        public virtual DbSet<Alumno> Alumno { get; set; }
        public virtual DbSet<Becas> Becas { get; set; }
        public virtual DbSet<Carreras> Carreras { get; set; }
        public virtual DbSet<EstatusList> EstatusList { get; set; }
        public virtual DbSet<GeneralesAlumno> GeneralesAlumno { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Alumno>(entity =>
            {
                entity.HasKey(e => e.AlId)
                    .HasName("PK__Alumno__7FB33DA0B046CBAF");

                entity.HasIndex(e => e.AlId, "UQ__Alumno__7FB33DA1CA9DD9EA")
                    .IsUnique();

                entity.Property(e => e.AlId)
                    .ValueGeneratedNever()
                    .HasColumnName("AL_ID");

                entity.Property(e => e.AlAnoPeriodoActual).HasColumnName("AL_AnoPeriodoActual");

                entity.Property(e => e.AlApm)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AL_APM");

                entity.Property(e => e.AlApp)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AL_APP");

                entity.Property(e => e.AlBecaActual).HasColumnName("AL_BecaActual");

                entity.Property(e => e.AlBecaInscripcion).HasColumnName("AL_Beca_inscripcion");

                entity.Property(e => e.AlBecaParcialidad).HasColumnName("AL_Beca_parcialidad");

                entity.Property(e => e.AlCarrera).HasColumnName("AL_Carrera");

                entity.Property(e => e.AlCicloActual).HasColumnName("AL_CicloActual");

                entity.Property(e => e.AlCorreoInst)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AL_CorreoInst");

                entity.Property(e => e.AlCoutaAdmin).HasColumnName("Al_CoutaAdmin");

                entity.Property(e => e.AlCurp)
                    .IsRequired()
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("AL_CURP");

                entity.Property(e => e.AlDescPromocion).HasColumnName("AL_Desc_promocion");

                entity.Property(e => e.AlDocumentos).HasColumnName("AL_Documentos");

                entity.Property(e => e.AlEsquemaPagoActual).HasColumnName("AL_EsquemaPagoActual");

                entity.Property(e => e.AlFactura).HasColumnName("AL_Factura");

                entity.Property(e => e.AlFechaIngreso)
                    .HasColumnType("date")
                    .HasColumnName("AL_FechaIngreso");

                entity.Property(e => e.AlFechaInicioNivel)
                    .HasColumnType("date")
                    .HasColumnName("AL_FechaInicioNivel");

                entity.Property(e => e.AlFechaNac)
                    .HasColumnType("date")
                    .HasColumnName("AL_FechaNac");

                entity.Property(e => e.AlMatricula)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AL_Matricula");

                entity.Property(e => e.AlModalidadActual).HasColumnName("AL_ModalidadActual");

                entity.Property(e => e.AlMontoDesc)
                    .HasColumnType("decimal(17, 2)")
                    .HasColumnName("Al_MontoDesc");

                entity.Property(e => e.AlNombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AL_Nombre");

                entity.Property(e => e.AlPeriodoActual).HasColumnName("AL_PeriodoActual");

                entity.Property(e => e.AlSemestre).HasColumnName("AL_Semestre");

                entity.Property(e => e.AlSexo).HasColumnName("AL_Sexo");

                entity.Property(e => e.AlStatusActual).HasColumnName("AL_StatusActual");

                entity.HasOne(d => d.AlCarreraNavigation)
                    .WithMany(p => p.Alumno)
                    .HasForeignKey(d => d.AlCarrera)
                    .HasConstraintName("FK_Alumno_Carrera");

                entity.HasOne(d => d.AlStatusActualNavigation)
                    .WithMany(p => p.Alumno)
                    .HasForeignKey(d => d.AlStatusActual)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Alumno_Estatus");
            });

            modelBuilder.Entity<Becas>(entity =>
            {
                entity.Property(e => e.BecasId).HasColumnName("Becas_ID");

                entity.Property(e => e.BecasActiva).HasColumnName("Becas_Activa");

                entity.Property(e => e.BecasClave)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Becas_Clave");

                entity.Property(e => e.BecasDescripcion)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Becas_Descripcion");

                entity.Property(e => e.BecasNombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Becas_Nombre");

                entity.Property(e => e.BecasProm).HasColumnName("Becas_prom");

                entity.Property(e => e.BecasResponsable)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Becas_Responsable");

                entity.Property(e => e.CategoriaId).HasColumnName("Categoria_id");

                entity.Property(e => e.ConId).HasColumnName("Con_id");

                entity.Property(e => e.Usuid).HasColumnName("usuid");
            });

            modelBuilder.Entity<Carreras>(entity =>
            {
                entity.HasKey(e => e.Idcarrera);

                entity.Property(e => e.Idcarrera)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCarrera");

                entity.Property(e => e.CarreraClave).HasMaxLength(50);

                entity.Property(e => e.CarreraIp).HasMaxLength(50);

                entity.Property(e => e.CarreraNombre).HasMaxLength(100);

                entity.Property(e => e.CarreraRevoe).HasMaxLength(50);

                entity.Property(e => e.FacFacultadId)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("FAC_FacultadID");

                entity.Property(e => e.ModModalidadId).HasColumnName("Mod_ModalidadID");

                entity.Property(e => e.NivelId).HasColumnName("Nivel_ID");

                entity.Property(e => e.PeId).HasColumnName("PE_ID");

                entity.Property(e => e.TempId).HasColumnName("tempId");

                entity.Property(e => e.Usuid).HasColumnName("usuid");
            });

            modelBuilder.Entity<EstatusList>(entity =>
            {
                entity.HasKey(e => e.SlStatusId)
                    .HasName("PK__EstatusList");

                entity.Property(e => e.SlStatusId).HasColumnName("SL_StatusID");

                entity.Property(e => e.SlDescripcion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("SL_Descripcion");

                entity.Property(e => e.SlModulo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SL_Modulo");

                entity.Property(e => e.SlModuloId).HasColumnName("SL_ModuloID");

                entity.Property(e => e.SlNombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SL_Nombre");
            });

            modelBuilder.Entity<GeneralesAlumno>(entity =>
            {
                entity.HasKey(e => e.GaAlumnoId)
                    .HasName("PK__Generale__D988B5F2D7DB48D2");

                entity.Property(e => e.GaAlumnoId)
                    .ValueGeneratedNever()
                    .HasColumnName("GA_AlumnoID");

                entity.Property(e => e.AlId).HasColumnName("AL_ID");

                entity.Property(e => e.GaApmtutor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GA_APMTutor")
                    .IsFixedLength();

                entity.Property(e => e.GaApptutor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GA_APPTutor")
                    .IsFixedLength();

                entity.Property(e => e.GaCalle)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GA_Calle")
                    .IsFixedLength();

                entity.Property(e => e.GaCorreoAlternativo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("GA_CorreoAlternativo")
                    .IsFixedLength();

                entity.Property(e => e.GaEstado).HasColumnName("GA_Estado");

                entity.Property(e => e.GaFechaNac)
                    .HasColumnType("date")
                    .HasColumnName("GA_FechaNac");

                entity.Property(e => e.GaMunicipio).HasColumnName("GA_Municipio");

                entity.Property(e => e.GaNombreTutor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GA_NombreTutor")
                    .IsFixedLength();

                entity.Property(e => e.GaNueroExt)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GA_NueroExt")
                    .IsFixedLength();

                entity.Property(e => e.GaNumeroInterior)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GA_NumeroInterior")
                    .IsFixedLength();

                entity.Property(e => e.GaTelefonoAlumno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GA_TelefonoAlumno")
                    .IsFixedLength();

                entity.Property(e => e.GaTelefonoCasa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GA_TelefonoCasa")
                    .IsFixedLength();

                entity.Property(e => e.GaTelefonoTutor)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GA_TelefonoTutor")
                    .IsFixedLength();

                entity.HasOne(d => d.Al)
                    .WithMany(p => p.GeneralesAlumno)
                    .HasForeignKey(d => d.AlId)
                    .HasConstraintName("FK_GeneralesAlumno_Alumno");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}